<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="hideLabelTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAA
        AAAtJ7Y4VH0nf/8nf/8va8IseX0A8v8A8v8UucJEZDdMsSJMsSJIjSt2XyzoogDoogCygxRAQEBAQEBA
        QEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEAkHO0xLZ00XZgnf/8nf/8zYqcikpgA
        8v8A8v8eoKdFdDJMsSJMsSJHfTCNbSLoogDoogCbdR5AQEAyMjIqKiosLCw2NjZAQEBAQEBAQEBAQEBA
        QEBAQEBAQEBAQEBAQEAkHO0kHOs6OmUsctcnf/8nfv07TmkNzdcA8v8A8P00ZWdJmShMsSJLsCJEWDrF
        jQ3oogDmoQBjVTNAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEAkHOwkHO0rJcY6
        Tmwnfv4nf/8tcdQxaGwA8f4A8v8PytRCWjpMsCJMsSJKmClmVzHnoQDoogDCjA9BQUBAQEBAQEBAQEBA
        QEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEAuKLEkHO0kHO02NHwwab0nf/8nf/83VoIWtL0A8v8A8v8q
        foJIiixMsSJMsSJEZzaugBboogDoogB6YipAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBA
        QEA9PFMlHuYkHO19Ws1zjIwofdUnf/8qeOqMe2yMjIyMjIyMjIyMjIxtkYxMsTZXpSWMgmOMjIyMjIyM
        jIxfdYxAQEBOQUGMgGiMjIyMjIyMjIxOaIBAQEBAQEBAQEBAQEBAQEAyLpckHO18WN7oxJ3B+PAnf/on
        f/9+dpz/1a//+PD/+PD/+PD/+PCr7fBtq0ugjH7/58D/+PD/+PD/+PCGwPBoTkGgjID/58D/+PD/+PD/
        +PBkotlAQEBAQEBAQEBAQEA/P0YoIdh8WN7oxJ3D+PAqeOsnf/87ffjtv4v/+PD/+PD/+PD/+PCq6/B4
        pUvCn4z/+Nr/+PD/+PD/+PDJ+PB0W4DCn4z/+Nv/+PD/+PD/+PDE+PBBQYBAQEBAQEBAQEBAQEA3NH18
        WN7oxJ3A+PA4Vqknf/8nf/+Jdbz/58Bm8fAA8v8WtLxFaDZ4pSLXsYzj+PB7f5SclyDvxJ3y+PB0eJ3W
        sYzi+PBBY52AaE7pxJ3E+PBBQYBAQEBAQEBAQEBAQEBAQEB9W7roxJ29+PA6OJktcNEnf/86f//aq37h
        +PAA8vcA8v8xa25JlinIySLj+PBDeJuUiyjvxJ37+PCAg5fWsYzi+PBBY52AaE7pxJ3E+PBBQYBAQEBA
        QEBAQEBAQEBAQECAZGntxJ3a+PCMjK9lgYwnfusnf/+IfNr/58Bm8PAA8v8Mz9pCVzxLsCJMsSJJmyeF
        cETvxJ37+PCgoIrasYzt+PCMn8CMjIzpxJ3E+PBBQYBAQEBAQEBAQEBAQEBAQECAaE7txJ3/+PD/+PD/
        +PCf4fAnf/wnf//ap4ri+PAA8vcA8v9th4mMjIyMjIyMjIyMjIzuxJ37+PCsq4fasYz/+PD/+PD/+PD/
        +PDE+PBBQYBAQEBAQEBAQEBAQEBAQECAaE7pxJ3/+PD/+PD/+PCk3PAofPMnf/9efe//1aln7vAA8v9l
        x+/asYz/+PD/+PD/+PD/+PD0+PCsm2DesYz/+PD/+PD/+PD/+PBdntRAQEBAQEBAQEBAQEBAQEBAQECA
        aE7pxJ3B+PAkHO4kHO1+X5pwjIwnf9o6f//Imprj+OAA8vdO4f/asZH/+PD/+PD/+PD/+PC0zPCsmwDf
        sYzv+PBBY51AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQECAaE7pxJ3E+PAoIt0kHO18WdrpxJ2/+PA6
        f/qgicX/5sBp7fBO4f/In5//+N1Lv7NMsSJMryNEUjqjkQrfsYz7+PBZbpqAaE50jIxBQVtAQEBAQEBA
        QEBAQEBAQEBAQECAaE7txJ3a+PCMjK98jIx8aq7txJ3a+PCMjK+gjIz/5sCd5PBO4fzIn6D/+OCMsc+M
        jIx4jIxIjk2AZizasXjt+PCMn8CMjIznv53E+PBBQYBAQEBAQEBAQEBAQEBAQECAaE7txJ3/+PD/+PD/
        +PDm+PDt1dX/+PD/+PD/+PD/+PCBxPBVucrIn6D/+OD/+PD/+PD/+PDI+PBQX3vInlX/+OD/+PD/+PD/
        +PCm3PBBQWFAQEBAQEBAQEBAQEBAQEBAQEDiomH/+PD/+PD/+PDe+PCbb+//+Ov/+PD/+PD/+PAro+s2
        XmKQ8Pv/+PL/+PD/+PD/+PDI+PBKn3J5UTb/6of/+PD/+PD/+PBkotVAQEBAQEBAQEBAQEBAQEBAQEBA
        QEBAQEBAQEBAQEBAQEAwK6QkHO0kHO00MYkxZK4nf/8nf/82W5Ebp64A8v8A8v8li5FHgS9MsSJMsSJF
        cDOheBvoogDingJUTDhAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEA+PkwmH98kHO0m
        HuE9QVopevAnf/8oe/I6UFsF5PAA8v8E5vI8VUxLqCRMsSJLqSRMTzrbmgXoogCtfxZAQEBAQEBAQEBA
        QEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEA0MYkkHO0kHO0wK6Q2W5Enf/8nf/8xZK4li5EA8v8A
        8v8bp65FcDNMsSJMsSJHgS+HaiXoogDoogBoWDFAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBA
        QEBAQEA7OWIkHOskHO0pI8s6S2Ynfv0nf/8sc9ozYmYA8P0A8v8Mz9pCVzxLsCJMsSJJmydhUzPmoQDo
        ogDHjwxBQD9AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEAvKqskHO0kHO01MoIxZ7Yn
        f/8nf/82WIkZrrYA8v8A8v8nhIlIhi5MsSJMsSJEazSofRnoogDoogCAZSdAQEBAQEBAQEBAQEBAQEBA
        QEBAQEBAQEBAQEBAQEBAQEBAQEA9PE4mHuMkHO0nIN88RFopfPQnf/8qeu85UlsE6PQA8v8G4+8+U0hM
        qyRMsSJLqCVOTjnenAToogDamgZKRjxAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEAz
        L5AkHO0kHO0xLZ00XZgnf/8nf/8zYqcikpgA8v8A8v8eoKdFdDJMsSJMsSJHfTCNbSLoogDoogCbdR5A
        QEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEA/P0QpItQkHO0lHek7PF0rduMnf/8ofvs7
        TWAK2OMA8v8C7vs3XFtLoSdMsSJMryNEUjrPlAroogDloAJZTjZAQEBAQEBAQEBAQEBAQEBAQEBAQEBA
        QEBAQEBAQEBAQEBAQEA3NXUkHO0kHO0tJ7g4U3snf/8nf/8vbMQsd3sA8v8A8v8Uu8REYzdMsSJMsSJI
        jit0XizoogDoogC0hBRAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEAsJr0kHO0k
        HO04NnAubsonf/8nf/85UXUSwcoA8v8A8v8ucXVJkitMsSJMsSJDXze5hxLoogDoogBAQEBAQEBAQEBA
        QEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEA8OlwkHOkkHO0oIdE8SmInfvsnf/8rdeA2XmIB7vsA
        8v8K1eBBVT5MryJMsSJKnydbUTbkoAHoogBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBA
        QEBAQEBAQEAwK6QkHO0kHO00MYkxZK4nf/8nf/82W5Ebp64A8v8A8v8li5FHgS9MsSJMsSJFcDOheBvo
        ogBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEA+PkwmH98kHO0mHuE9QVop
        evAnf/8oe/I6UFsF5PAA8v8E5vI8VUxLqCRMsSJLqSRMTzrbmgVAQEBAQEBAQEBAQEBAQEBAQEBAQEBA
        QEBAQEBAQEBAQEBAQEBAQEBAQEBAQEA0MYkkHO0kHO0wK6Q2W5Enf/8nf/8xZK4li5EA8v8A8v8bp65F
        cDNMsSJMsSJHgS+HaiUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>